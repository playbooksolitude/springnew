---
title: "03.babynames"
format: html
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r setup, message=FALSE, warning=FALSE}

library(tidyverse)
library(babynames)
#remotes::install_github("ricardo-bion/ggradar")
library(ggradar)
library(GGally)

```

You can add options to executable code like this

## #\| 옵션

-   {r } 청크 바로 밑에 작성

```{r }
#| echo: false

mpg |> 
  count(model)


```

## pairs() 기본 함수

```{r}

#| echo: false
mtcars |> 
  pairs()

```

## iris

```{r}

iris |> 
  pairs(panel = panel.smooth, 
        col = iris$Species)

```

## ggpairs

```{r}

iris |> 
  GGally::ggpairs(aes(colour = Species))

```

## ggradar

```{r}

mtcars |> 
  rownames_to_column(var = 'cars') |>
  mutate_at(vars(-cars), scales::rescale) |> 
  tail(2) |> 
  select(1:8) |> 
  ggradar()

```

### CHECK

```{r}

mtcars |> 
  rownames_to_column('cars') |> 
  filter(cars %in% c("Maserati Bora", 'Volvo 142E'))

```

### MPG

```{r warning=FALSE}

mpg
ggplot() +
  geom_point(data = mpg, 
       aes(x = cty, y = hwy), 
       color = 'grey') +
  geom_point(data = mpg |> 
               filter(drv == 'r'), 
       aes(x = cty, y = hwy), 
       color = 'red') 

```

## MPG aes(color)

```{r}

ggplot(data = mpg, 
       aes(x = cty, y = hwy)) +
  geom_point(data = mpg, 
       aes(x = cty, y = hwy, color = drv)) +
  facet_wrap(.~drv)
  
```

```{r}
#연도별 남녀수 및 성별 비율
babynames |> 
  group_by(year, sex) |> 
  reframe(sum = sum(n)) |>
  #reframe(sum = sum(n), n = n()) |> 
  pivot_wider(names_from = sex, values_from = sum) |> 
  rowwise() |> 
  mutate(sum = sum(F,M),
    prop_f = F/sum, 
    prop_m = M/sum)

```

```{r}

#연도별 성별 글자수
babynames |> 
  #filter(year == 2010) |> 
  mutate(name_char = nchar(name)) |> 
  group_by(year, sex) |> 
  reframe(mean_char = mean(name_char)) |> 
  ggplot(aes(x = year, y = mean_char, color = sex)) +
  geom_point()
```

```{r}
#1 연도별로 태어난 아이의 수를 구하시오 ---- 
## group_by()
## 아이의 수 컬럼명 sum_n = sum(n)

babynames |> 
  group_by(year) |> 
  reframe(sum_n = sum(n))


```

```{r}
#1-1 1884에 태어난 아이의 수는 몇명인가? ----

# 최근 20년간 가장 많은 이름은?
babynames |> 
  group_by(name, year, sex) |> 
  reframe(n = n()) -> babynames_1groupname

```

```{r}

(babynames |> 
  group_by(year, sex) |> 
  reframe(sum = sum(n)) -> baby_1groupby)
```

```{r}

# levels
baby_1groupby |> 
  ggplot(aes(x = year, y = sum)) +
  geom_line(aes(color = sex), size = .5) +
  geom_area(alpha = .5, position = 'identity', aes(fill = sex)) +
  bbc_style() +
  ggtitle(label = 'USA Babynames') +
  scale_y_continuous(labels = scales::comma) #+
  scale_fill_manual(values = c('M' = 'lightblue', 'F' = 'pink')) +
  scale_color_manual(values = c('M' = 'lightblue', 'F' = 'pink'))


```
